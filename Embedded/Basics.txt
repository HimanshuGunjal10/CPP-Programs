#include: In C++, all lines that start with pound (#) sign are called directives and are processed by preprocessor which is a program invoked by the compiler. The #include directive tells the compiler to include a file named “iostream” (which contains declarations of all the standard input/output library functions.)
printf – stdio.h	cout – iostream.h

int main(int argc, char* argv[]) { /* ... */ }
it is never a good idea to use “void main()” or just “main()” as it doesn’t confirm standards. It may be allowed by some compilers though.

Primitive data types and user-defined data types

Float – single precision floating point value(4B)
Double- double precision floating point value(8B)
Datatype Modifiers: affects range and size of data types
signed, unsigned, long, short
int(4), unsigned int(4), short int(2), long int(4), long long int(8)
char(1), long double(12)

These are for GCC 64 bit compiler
cout << "Size of char : " << sizeof(char) << " byte" << endl;

For #include <filename> the preprocessor searches in an implementation dependent manner, normally in search directories pre-designated by the compiler/IDE. This method is normally used to include "standard library" header files.

For #include "filename" the preprocessor searches first in the same directory as the file containing the directive, and then follows the search path used for the #include <filename> form. This method is normally used to include "programmer-defined" header files.

#include <stdio.h>
#include <iostream>
using namespace std;

int main()
{
	printf("hello world\n");

	return 0;
}
