
OS - its a systems software that manages computer h/w and s/w resources and provides common services for computer programs

RTOS - contains fewer services (unlike Windows/Linux)
	parallel task scheduler
	task synchronisation (Semaphores)
	task communication(Queues,mailboxes)

RTOS tasks
	high priority first
	if equal, then time sliced
	low priority get allocation only when high priority tasks are sleeping/suspended/blocked
	explicit task sleep using API - vTaskDelay();
	sleeping on a semaphore
	sleeping on an empty queue(reading)
	sleeping on a full queue(writing)

//code
	int main(int argc, char const *argv[])
	{
	    //// You may need to change this value.
	    const uint32_t STACK_SIZE = 128;
	    xReturned = xTaskCreate(
	                    vTaskCode,       /* Function that implements the task. */
	                    "NAME",          /* Text name for the task. */
	                    STACK_SIZE,      /* Stack size in words, not bytes. */
	                    ( void * ) 1,    /* Parameter passed into the task. */
	                    tskIDLE_PRIORITY,/* Priority at which the task is created. */
	                    &xHandle );      /* Used to pass out the created task's handle. */

	    /* Start Scheduler */
	    vTaskStartScheduler();

	    return 0;
	}
--
When the RTOS scheduler switches from one task to another task, this is called a Context Switch (approx 100uS. So, tasks need to run for atleast 1ms)
	PC
	SP
	GPRs
Happens at OS tick ISR (OS kernel interrupt)